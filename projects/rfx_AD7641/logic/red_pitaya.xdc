

############################################################################
# IO constraints                                                           #
############################################################################


set_property IOSTANDARD BLVDS_25 [get_ports {CNVST_in_P[0]}]
set_property IOSTANDARD BLVDS_25 [get_ports {CNVST_in_N[0]}]
set_property IOSTANDARD BLVDS_25 [get_ports {SCLK_in_P[0]}]
set_property IOSTANDARD BLVDS_25 [get_ports {SDAT_in_P[0]}]
set_property PACKAGE_PIN M14 [get_ports {CNVST_in_P[0]}]
set_property PACKAGE_PIN G17 [get_ports {SCLK_in_P[0]}]
set_property PACKAGE_PIN H16 [get_ports {SDAT_in_P[0]}]
set_property PACKAGE_PIN L16 [get_ports {CNVST_out_P[0]}]
set_property IOSTANDARD TMDS_33 [get_ports {CNVST_out_P[0]}]
set_property PACKAGE_PIN J18 [get_ports {SCLK_out_P[0]}]
set_property IOSTANDARD TMDS_33 [get_ports {SCLK_out_P[0]}]
set_property PACKAGE_PIN K17 [get_ports {SDAT_out_P[0]}]
set_property IOSTANDARD TMDS_33 [get_ports {SDAT_out_P[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports {CNVST_led[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports {SCLK_led[0]}]
set_property IOSTANDARD LVCMOS33 [get_ports {SDAT_led[0]}]

set_property CLOCK_DEDICATED_ROUTE FALSE [get_nets AD7641_i/SCLK_in_buf/U0/IBUF_OUT_0__s_net_1]

#set_property PACKAGE_PIN F16 [get_ports prescaler_output_clk]
set_property PACKAGE_PIN F17 [get_ports {CNVST_led[0]}]
set_property PACKAGE_PIN G15 [get_ports {SCLK_led[0]}]
set_property PACKAGE_PIN H15 [get_ports {SDAT_led[0]}]

set_property IOSTANDARD LVCMOS33 [get_ports error_state_led]
set_property PACKAGE_PIN J14 [get_ports error_state_led]


create_clock -period 10.000 -name {SCLK_in_P[0]} -waveform {0.000 5.000} [get_ports {SCLK_in_P[0]}]
create_generated_clock -name AD7641_i/rfx_AD7641_portoghese_0/U0/AD7641_serial_emulator_inst/enable -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins AD7641_i/rfx_AD7641_portoghese_0/U0/AD7641_serial_emulator_inst/enable_reg/Q]
create_generated_clock -name AD7641_i/rfx_AD7641_portoghese_0/U0/prescaler_inst/SDAT_out_reg -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins AD7641_i/rfx_AD7641_portoghese_0/U0/prescaler_inst/clk_out_reg/Q]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[0]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[0]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[1]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[1]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[2]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[2]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[3]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[3]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[4]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[4]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[5]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[5]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[6]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[6]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[7]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[7]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[8]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[8]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[9]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[9]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[10]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[10]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[11]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[11]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[12]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[12]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[13]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[13]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[14]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[14]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[15]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[15]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[16]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[16]/Q}]
create_generated_clock -name {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0[17]} -source [get_pins {AD7641_i/processing_system7_0/inst/PS7_i/FCLKCLK[0]}] -divide_by 1 [get_pins {AD7641_i/rfx_AD7641_portoghese_0/U0/rfx_AD7641_serial_emulator_v1_0_S00_AXI_inst/slv_reg0_reg[17]/Q}]
set_input_delay -clock [get_clocks clk_fpga_0] -min -add_delay 4.000 [get_ports {CNVST_in_N[0]}]
set_input_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports {CNVST_in_N[0]}]
set_input_delay -clock [get_clocks clk_fpga_0] -min -add_delay 4.000 [get_ports {CNVST_in_P[0]}]
set_input_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports {CNVST_in_P[0]}]
set_input_delay -clock [get_clocks {SCLK_in_P[0]}] -clock_fall -min -add_delay 2.000 [get_ports {SDAT_in_N[0]}]
set_input_delay -clock [get_clocks {SCLK_in_P[0]}] -clock_fall -max -add_delay 3.000 [get_ports {SDAT_in_N[0]}]
set_input_delay -clock [get_clocks {SCLK_in_P[0]}] -min -add_delay 2.000 [get_ports {SDAT_in_N[0]}]
set_input_delay -clock [get_clocks {SCLK_in_P[0]}] -max -add_delay 3.000 [get_ports {SDAT_in_N[0]}]
set_input_delay -clock [get_clocks {SCLK_in_P[0]}] -clock_fall -min -add_delay 2.000 [get_ports {SDAT_in_P[0]}]
set_input_delay -clock [get_clocks {SCLK_in_P[0]}] -clock_fall -max -add_delay 3.000 [get_ports {SDAT_in_P[0]}]
set_input_delay -clock [get_clocks {SCLK_in_P[0]}] -min -add_delay 2.000 [get_ports {SDAT_in_P[0]}]
set_input_delay -clock [get_clocks {SCLK_in_P[0]}] -max -add_delay 3.000 [get_ports {SDAT_in_P[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -min -add_delay 0.000 [get_ports {CNVST_led[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports {CNVST_led[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -min -add_delay 0.000 [get_ports {CNVST_out_N[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports {CNVST_out_N[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -min -add_delay 0.000 [get_ports {CNVST_out_P[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports {CNVST_out_P[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -min -add_delay 0.000 [get_ports {SCLK_led[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports {SCLK_led[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -min -add_delay 0.000 [get_ports {SCLK_out_N[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports {SCLK_out_N[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -min -add_delay 0.000 [get_ports {SCLK_out_P[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports {SCLK_out_P[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -min -add_delay 0.000 [get_ports {SDAT_led[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports {SDAT_led[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -min -add_delay 0.000 [get_ports {SDAT_out_N[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports {SDAT_out_N[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -min -add_delay 0.000 [get_ports {SDAT_out_P[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports {SDAT_out_P[0]}]
set_output_delay -clock [get_clocks clk_fpga_0] -min -add_delay 0.000 [get_ports error_state_led]
set_output_delay -clock [get_clocks clk_fpga_0] -max -add_delay 4.000 [get_ports error_state_led]
set_clock_groups -asynchronous -group [get_clocks {SCLK_in_P[0]}] -group [get_clocks clk_fpga_0]
